{"id":"62f9c802-4603-495c-adce-7b1bfb8bafeb","name":"Microsoft SQL Server","slug":"microsoft-mssql-server","type":"image","publisher":{"id":"10d88e8d-a819-4efb-99d2-d6c2b4c36692","name":"Microsoft"},"created_at":"2018-12-04T23:30:41.550446Z","updated_at":"2020-06-24T04:48:33.957198Z","short_description":"Official images for Microsoft SQL Server on Linux for Docker Engine.","full_description":"\n## Important: Client Firewall Rules Update to Microsoft Container Registry (MCR)\n \n\nTo provide a consistent FQDNs, the data endpoint will be changing from *.cdn.mscr.io to *.data.mcr.microsoft.com\n\n\nFor more info, see [MCR Client Firewall Rules](https://aka.ms/mcr/firewallrules).\n\n\n# Featured Tags\n\n- `2017-latest`  \ndocker pull mcr.microsoft.com/mssql/server:2017-latest \n- `2019-latest`  \ndocker pull mcr.microsoft.com/mssql/server:2019-latest\n\n- `2017-CU20-ubuntu-16.04`  \ndocker pull mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04\n- `2019-CU5-ubuntu-16.04`  \ndocker pull mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-16.04\n\n# About this Image\nOfficial container images for Microsoft SQL Server on Linux for Docker Engine.\n\n# How to use this Image\nStart a mssql-server instance using the CU8 release\nIMPORTANT NOTE: If you are using PowerShell on Windows to run these commands use double quotes instead of single quotes.\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-CU8-ubuntu\n```\nStart a mssql-server instance using the latest update for SQL Server 2017\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest\n```\n\nStart a mssql-server instance running as the SQL Express edition\n```\ndocker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -e 'MSSQL_PID=Express' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu \n```\nConnect to Microsoft SQL Server\nYou can connect to the SQL Server using the sqlcmd tool inside of the container by using the following command on the host:\n```\ndocker exec -it \u003ccontainer_id|container_name\u003e /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \u003cyour_password\u003e\n```\nYou can also use the tools in an entrypoint.sh script to do things like create databases or logins, attach databases, import data, or other setup tasks. See this example of [using an entrypoint.sh script to create a database and schema and bcp in some data](https://github.com/twright-msft/mssql-node-docker-demo-app).\n\nYou can connect to the SQL Server instance in the container from outside the container by using various command line and GUI tools on the host or remote computers. See the [Connect and Query](https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-connect-and-query-sqlcmd) topic in the SQL Server on Linux documentation.\n\n# Configuration\n## Requirements\n* This image requires Docker Engine 1.8+ in any of their [supported platforms](https://www.docker.com/products/overview).\n* At least 2GB of RAM (3.25 GB prior to 2017-CU2). Make sure to assign enough memory to the Docker VM if you're running on Docker for [Mac](https://docs.docker.com/docker-for-mac/#/general) or [Windows](https://docs.docker.com/docker-for-windows/#/advanced).\n* Requires the following environment flags\n\n    `ACCEPT_EULA=Y`\n\n    `SA_PASSWORD=\u003cyour_strong_password\u003e`\n    \n    `MSSQL_PID=\u003cyour_product_id | edition_name\u003e (default: Developer)`\n\n* A strong system administrator (SA) password: At least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.\n\n## Environment Variables\nYou can use environment variables to configure SQL Server on Linux Containers.\n\n`ACCEPT_EULA` confirms your acceptance of the [End-User Licensing Agreement](https://go.microsoft.com/fwlink/?linkid=857698).\n\n`SA_PASSWORD` is the database system administrator (userid = 'sa') password used to connect to SQL Server once the container is running. Important note: This password needs to include at least 8 characters of at least three of these four categories: uppercase letters, lowercase letters, numbers and non-alphanumeric symbols.\n\n`MSSQL_PID` is the Product ID (PID) or Edition that the container will run with. Acceptable values:\n\n* Developer : This will run the container using the Developer Edition (this is the default  if no MSSQL_PID environment variable is supplied)\n* Express : This will run the container using the Express Edition\n* Standard : This will run the container using the Standard Edition\n* Enterprise : This will run the container using the Enterprise Edition\n* EnterpriseCore : This will run the container using the Enterprise Edition Core\n\u003cvalid product id\u003e : This will run the container with the edition that is associated with the PID\n\nFor a complete list of environment variables that can be used, refer to the documentation [here](https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-2017).\n\n\n# Related Repos\nSQL Server for Windows Container: [microsoft/mssql-server-windows-developer](https://hub.docker.com/r/microsoft/mssql-server-windows-developer)\nSQL Server Express for Windows Containers: [microsoft/mssql-server-windows-express](https://hub.docker.com/r/microsoft/mssql-server-windows-express/)\nSQL Server Command Line Tools for Linux: [microsoft/mssql-tools](https://hub.docker.com/r/microsoft/mssql-tools/)\n\n# Full Tag Listing\n### Linux Images\nTags | Architecture | Dockerfile | OsVersion | CreatedTime | LastUpdatedTime\n---------| --------------| -----------| -------------| -------------| -------------\nlatest | amd64 | No Dockerfile | Ubuntu 16.04 | 09/21/2018 01:00:16 | 06/22/2020 18:21:28\n2019-latest | amd64 | No Dockerfile | Ubuntu 16.04 | 11/07/2018 05:01:10 | 06/22/2020 18:20:45\n2017-latest | amd64 | No Dockerfile | Ubuntu 16.04 | 09/21/2018 01:00:25 | 04/10/2020 00:37:25\n2019-CU5-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 06/22/2020 18:21:51 | 06/22/2020 18:21:51\n2019-CU4-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 03/31/2020 16:57:33 | 03/31/2020 16:57:33\n2019-CU3-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 03/12/2020 22:50:30 | 03/12/2020 22:50:30\n2019-CU2-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 02/14/2020 15:57:52 | 02/14/2020 15:57:52\n2019-CU1-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 01/08/2020 00:14:31 | 01/08/2020 00:14:31\n2019-GDR1-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 11/02/2019 03:57:26 | 11/02/2019 03:57:26\n2019-GA-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 11/02/2019 02:31:25 | 11/02/2019 02:31:25\n2017-CU20-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 04/10/2020 00:38:00 | 04/10/2020 00:38:00\n2017-CU19-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 02/06/2020 20:21:01 | 02/06/2020 20:21:01\n2017-CU18-ubuntu-16.04 | amd64 | No Dockerfile | Ubuntu 16.04 | 12/09/2019 21:57:32 | 12/09/2019 21:57:32\n2017-CU17-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 11/12/2019 20:17:45 | 11/12/2019 20:17:45\n2017-CU16-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 08/12/2019 22:19:30 | 08/12/2019 22:19:30\n2017-CU15-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 05/23/2019 22:30:27 | 05/23/2019 22:30:27\n2017-CU14-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 03/25/2019 22:37:07 | 03/25/2019 22:37:07\n2017-CU13-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 12/18/2018 18:50:25 | 12/18/2018 18:50:25\n2017-CU12-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 10/24/2018 18:11:57 | 10/24/2018 18:11:57\n2017-CU11-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/21/2018 01:00:56 | 09/21/2018 01:00:56\n2017-CU10-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/13/2018 03:18:19 | 09/13/2018 03:18:19\n2017-CU9-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:26:19 | 09/10/2018 23:26:19\n2017-CU8-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:28:14 | 09/10/2018 23:28:14\n2017-CU7-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:30:43 | 09/10/2018 23:30:43\n2017-CU6-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:33:09 | 09/10/2018 23:33:09\n2017-CU5-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:35:08 | 09/10/2018 23:35:08\n2017-CU4-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:37:19 | 09/10/2018 23:37:19\n2017-CU3-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:39:24 | 09/10/2018 23:39:24\n2017-CU2-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:41:27 | 09/10/2018 23:41:27\n2017-CU1-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:43:12 | 09/10/2018 23:43:12\n2017-GDR-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:45:29 | 09/10/2018 23:45:29\n2017-GA-ubuntu | amd64 | No Dockerfile | Ubuntu 16.04 | 09/10/2018 23:52:48 | 09/10/2018 23:52:48\n\nYou can retrieve a list of all available tags for mssql/server at https://mcr.microsoft.com/v2/mssql/server/tags/list\n\n\nNotes:\n* GA = General Availability - when the version is officially available and supported.\n* CU = Cumulative Update - a periodic release that includes bug fixes, security fixes, and occasionally a small feature.\n* CTP = Community Technology Preview - a preview release that precedes the GA of an upcoming new version.\n* GDR = General Distribution Release - a release that contains ONLY security fixes.\n\n# Support\nView issues on the [mssql-docker GitHub Project](https://github.com/Microsoft/mssql-docker).\n\n## Known Issues\n* Mounting a volume does not work on Docker for Mac\n\n# License\nBy passing the value \"Y\" to the environment variable \"ACCEPT_EULA\", you are expressing that you have a valid and existing license for the edition and version of SQL Server that you intend to use. You also agree that your use of SQL Server software running in a Docker container image will be governed by the terms of your SQL Server license.\n\nTo specify the edition, use the MSSQL_PID environment variable. Details can be found in the \"Environment Variables\" section below.\n\nSQL Server Developer edition lets developers build any kind of application on top of SQL Server. It includes all the functionality of Enterprise edition, but is licensed for use as a development and test system, not as a production server. SQL Server Developer Edition cannot be used in a production environment. The SQL Server 2017 Developer Edition license terms are located [here](https://go.microsoft.com/fwlink/?linkid=857698).\n\n\n\n\n","source":"publisher","popularity":27646497,"categories":[{"name":"Base Images","label":"Base Images"}],"operating_systems":[{"name":"linux","label":"Linux"}],"architectures":[{"name":"amd64","label":"x86-64"}],"links":[{"url":"https://github.com/Microsoft/mssql-docker/issues","label":"support"},{"url":"https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker?view=sql-server-2017","label":"documentation"}],"screenshots":null,"logo_url":{"small":"https://mcrflowprodcentralus.blob.core.windows.net/defaultlogo/Microsoft_logo.svg?sp=r\u0026st=2019-01-19T00:10:26Z\u0026se=2033-11-04T07:10:26Z\u0026spr=https\u0026sv=2018-03-28\u0026sig=dRn%2BJsqcKwsVdAMcdkzPAbydqSC%2BzBS9BwJUI9AflR4%3D\u0026sr=b","small@2x":""},"is_offline":false,"plans":[{"id":"411f6241-eb5a-49bf-9beb-3c564e342d53","name":"Plan for publisher workflow","description":"Plan for publisher workflow","instructions":"Plan for publisher workflow","download_attribute":"anonymous","eusa":"https://microsoft.com","eusa_type":"url","default_version":{"linux":"linux-image"},"versions":[{"os":"linux","architecture":"amd64","tags":[{"value":"linux-image","latest":true}]}],"operating_systems":[{"name":"linux","label":"Linux"}],"architectures":[{"name":"amd64","label":"x86-64"}],"certification_status":"not_certified","is_offline":false,"rank":0,"repositories":[{"namespace":"store","reponame":"microsoft/defaultpublisher"}]}]}

